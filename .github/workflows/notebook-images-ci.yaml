name: rttl-notebook-images-ci

on:
  push:
    branches:
      - 'main'
env:
  GAR_LOCATION: us-west1

jobs:
  get-changed:
    # check for any changes to a worker VERSION file
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.mapped-files.outputs.matrix }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Get changed files
        id: changed-files
        # Pinned to v47.0.0 via SHA hash
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62
        with:
          files: |
            **/VERSION
          json: true
          write_output_files: true
      -
        name: Map to JSON
        # Get the parent folder and add to an array
        id: mapped-files
        run: |
          set -eux
          DATA=$(echo ${{ steps.changed-files.outputs.all_changed_files }} | jq -c '. | map(split("/")[0]) | unique')
          echo "matrix=$DATA" >> "$GITHUB_OUTPUT"
  build-workers:
    needs: get-changed
    # Skip if no changes in worker versions in this push
    if: needs.get-changed.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions: ${{ fromJSON(needs.get-changed.outputs.matrix) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Get version number
        # Read the version number out of worker_name/VERSION and push to ENV
        env:
          CTX: ${{ matrix.versions }}
        run: |
          VER=$(cat ${CTX}/VERSION)
          echo "VERSION=$VER" >> $GITHUB_ENV
      -
        name: Set up image name
        # Conditionally set the image name to use.
        env:
          CTX: ${{ matrix.versions }}
        run: |
          if [ $CTX == 'nfs_server' ]
          then
            echo "IMAGE=nfs-server" >> $GITHUB_ENV
          else
            echo "IMAGE=jupyter-$CTX-notebook" >> $GITHUB_ENV
          fi
      -
        name: Docker login with GCP credentials
        id: gcp-login
        shell: bash
        run: |
          echo "${{ secrets.GCP_RTTL_AR_WRITER_KEY }}" |
            base64 -d |
            docker login --username=_json_key --password-stdin https://${{ env.GAR_LOCATION }}-docker.pkg.dev
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:${{ matrix.versions }}"
          push: true
          tags: |
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/uwit-mci-axdd/rttl-images/${{ env.IMAGE }}:${{ env.VERSION }}
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/uwit-mci-axdd/rttl-images/${{ env.IMAGE }}:latest
      -
        name: Run Trivy vulnerability scanner
        # Pinned to v0.33.1 via SHA hash
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        id: trivy-scan
        with:
          image-ref: ${{ env.GAR_LOCATION }}-docker.pkg.dev/uwit-mci-axdd/rttl-images/${{ env.IMAGE }}:${{ env.VERSION }}
          format: 'sarif'
          vuln-type: 'library'
          timeout: '15m0s'
          output: 'trivy-results.sarif'
      -
        name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: 'trivy-results.sarif'
          category: trivy-${{ matrix.versions }}